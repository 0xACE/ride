OpenWindow 
 - new field "filename"

 ['GetLanguageBar', {}]

 ['ReplyGetLanguageBar', {
     entries: [
         {
             name: '',
             avchar: '',
             helptext: ['',],
         },
     ]
 }]
 

 ['GetConfiguration', {
     names:['',],
 }]
 ['ReplyGetConfiguration', {
     configurations: [
         {
             name:'',
             value,
         },
     ]
 }]

 ['ConfigurationSet', {
     configurations: [
         {
             name:'',
             value,
         },
     ]
 }]

 ['ReplyConfigurationSet', {
     configurations: [
         {
             name:'',
             rc:, 
              // SO_OK           0
              // SO_BAD_NAME     1
              // SO_BAD_VALUE    2
              // SO_CANT_SET     3
         },
     ]
 }]

 ['SetThread', {tid:numeric}] // focus thread tid (already implemented)
 ['ReplySetThread', {tid, rc, message}] // focus thread tid result (rc=0 if ok), message when rc!=0

// get attributes on multiple threads

['GetThreadAttributes', {
     threads: [tids|-1,]  
 }]
 // if first item is -1, return info for all threads and stop processing
 // if -1 found after first, return non zero in rc for that element

['ReplyGetThreadAttributes', {
     threads: [{
         tid: tid,
         rc: numeric, // 0 if ok, 
         paused: bool,
         noninterruptable: int, // bit fields. 0: interruptable, 1: interruptable, 2:children will be created as non-interruptable
     }]
 }]

// set attributes on multiple threads

// if first item is -1, set info for all threads and stop processing
// if -1 found after first, return non zero in rc for that element


['SetThreadAttributes', {
     threads: [{
         tid: tid|-1,
         paused: bool,
         noninterruptable: int, // as aboce

     }]
 }]

['ReplySetThreadAttributes', { // maybe not in first draft
         // contents the same as ReplySetThreadAttributes
 }]

 ['ResumeAllThreads', {}] // check with Morten


 ['TaskDialog', { // and potentially for OptionsDialog, extend with:
    questionkey: '',      // key for specific question 
    questionlabel: ''     // text to go with checkbox
 }]

['Subscribe', {
  'status': 'all' | 'stack' |'threads' â€¦ 
  'heartbeat': interval
}]

['Unsubscribe', {
  'features': ['heartbeat', 'status']
}]

['InterpreterStatus',{
    TBC
}]

['InterpreterHeartBeat',{
    ping
}]
